openapi: 3.0.0
info:
  title: ONDC Protocol API for retail (grocery, f&b)
  description:
    ONDC Protocol API specification, which includes statutory requirements for packaged commodities and pre-packaged food
    This is an adaptation of Beckn Core version 0.9.3
  version: 1.2.5
security:
  - SubscriberAuth: []
  - GatewaySubscriberAuth: []
  - GatewaySubscriberAuthNew: []
paths:
  /search:
    post:
      tags:
        - ONDC Seller App
        - ONDC Gateway
      description: Search for services by intent
      requestBody:
        description: Buyer searches for products and services
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/search.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /select:
    post:
      tags:
        - ONDC Seller App
      description: Select items from the catalog and build your order
      requestBody:
        description: Buyer selects one or more catalog items
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/select.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /init:
    post:
      tags:
        - ONDC Seller App
      description: Initialize an order by providing billing and/or shipping details
      requestBody:
        description: Buyer initializes order checkout
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/init.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /confirm:
    post:
      tags:
        - ONDC Seller App
      description: Initialize an order by providing billing and/or shipping details
      requestBody:
        description: Buyer confirms an order
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/confirm.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /status:
    post:
      tags:
        - ONDC Seller App
      description: Fetch the latest order object
      requestBody:
        description: Buyer checks for status of order
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/status.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /track:
    post:
      tags:
        - ONDC Seller App
      description: Track an active order
      requestBody:
        description: Buyer tracks fulfillment of an order
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/track.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /cancel:
    post:
      tags:
        - ONDC Seller App
      description: Cancel an order
      requestBody:
        description: Buyer cancels an order
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/cancel.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /update:
    post:
      tags:
        - ONDC Seller App
      description: Update an order
      requestBody:
        description: Buyer updates an order
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/update.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /on_search:
    post:
      tags:
        - ONDC Buyer App
      description: Send catalog
      requestBody:
        description: Sellers provide their catalog in response to buyer search
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/on_search.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - context
  /on_select:
    post:
      tags:
        - ONDC Buyer App
      description: Send draft order object with quoted price for selected items
      requestBody:
        description: Seller provides quote for selected items
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/on_select.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /on_init:
    post:
      tags:
        - ONDC Buyer App
      description: Send order object with payment details updated
      requestBody:
        description: Seller provides terms and conditions for an order
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/on_init.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /on_confirm:
    post:
      tags:
        - ONDC Buyer App
      description: Send active order object
      requestBody:
        description: Seller confirms order
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/on_confirm.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /on_track:
    post:
      tags:
        - ONDC Buyer App
      description: Send tracking details of an active order
      requestBody:
        description: Seller provides tracking details for an order
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/on_track.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /on_cancel:
    post:
      tags:
        - ONDC Buyer App
      description: Send cancellation request_id with reasons list in case of cancellation request. Else send cancelled order object
      requestBody:
        description: Seller provides response to cancellation request
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/on_cancel.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /on_update:
    post:
      tags:
        - ONDC Buyer App
      description: Returns updated service with updated runtime object
      requestBody:
        description: Seller provides response to order update
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/on_update.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
  /on_status:
    post:
      tags:
        - ONDC Buyer App
      description: Fetch the status of a Service
      requestBody:
        description: Seller provides status information for order
        content:
          application/json:
            schema:
              $ref: "./ondc_schema/on_status.yaml"
              additionalProperties: false
      responses:
        "200":
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: "#/components/schemas/Ack"
                    required:
                      - ack
                  error:
                    $ref: "#/components/schemas/Error"
                required:
                  - message
components:
  securitySchemes:
    SubscriberAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Signature of message body using Buyer App or Seller App subscriber''s signing public key. <br/><br/>Format:<br/><br/><code>Authorization : Signature keyId="{subscriber_id}|{unique_key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64(signing string)"</code>'
    GatewaySubscriberAuth:
      type: apiKey
      in: header
      name: Proxy-Authorization
      description: 'Signature of message body + BuyerApp/SellerApp''s Authorization header using Gateway''s signing public key. Format:<br/><br/><code>Proxy-Authorization : Signature keyId="{subscriber_id}|{unique_key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64(signing string)"</code><p><b>Note:</b>This header will be deprecated soon and will no longer be supported in future releases. New implementors are requested to use the X-Gateway-Authorization header. Existing implementations are requested to migrate their header to the new header. The deprecation date will be set after discussion as per the standard specification governance process.</p>'
    GatewaySubscriberAuthNew:
      type: apiKey
      in: header
      name: X-Gateway-Authorization
      description: 'Signature of message body + BuyerApp/SellerApp''s Authorization header using Gateway''s signing public key. Format:<br/><br/><code>X-Gateway-Authorization : Signature keyId="{subscriber_id}|{unique_key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64(signing string)"</code>'
  schemas:
    Ack:
      description: Describes the ACK response
      type: object
      properties:
        status:
          type: string
          description: "Describe the status of the ACK response. If schema validation passes, status is ACK else it is NACK"
          enum:
            - ACK
            - NACK
        tags:
          description: A list of tags containing any additional information sent along with the Acknowledgement.
          type: array
          items:
            $ref: "#/components/schemas/TagGroup"
      required:
        - status
    Address:
      description: Describes an address
      type: object
      properties:
        name:
          type: string
          description: "Name of address if applicable. Example, shop name"
        building:
          type: string
          description: Name of the building or block
        street:
          type: string
          description: Street name or number
        locality:
          type: string
          description: "Name of the locality, apartments"
        city:
          type: string
          description: City name
        state:
          type: string
          description: State name
        country:
          type: string
          description: Country name
        area_code:
          type: string
          description: "Area code. This can be Pincode, ZIP code or any equivalent"
    Agent:
      description: Describes an order executor
      allOf:
        - $ref: "#/components/schemas/Contact"
    Authorization:
      description: Describes an authorization mechanism
      type: object
      properties:
        type:
          type: string
          description: Type of authorization mechanism used
        token:
          type: string
          description: Token used for authorization
        valid_from:
          type: string
          format: date-time
          description: Timestamp in RFC3339 format from which token is valid
        valid_to:
          type: string
          format: date-time
          description: Timestamp in RFC3339 format until which token is valid
        status:
          type: string
          description: Status of the token
    Billing:
      description: Describes a billing event
      type: object
      properties:
        tax_number:
          description: Tax identification number for billing
          type: string
        name:
          description: Personal details of the customer needed for billing.
          type: string
        address:
          $ref: "#/components/schemas/Address"
        email:
          type: string
          format: email
        phone:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Cancellation:
      description: Describes a cancellation event
      type: object
      properties:
        type:
          type: string
          enum:
            - full
            - partial
        ref_id:
          type: string
        policies:
          type: array
          items:
            $ref: "#/components/schemas/Policy"
        time:
          type: string
          format: date-time
        cancelled_by:
          type: string
        reasons:
          $ref: "#/components/schemas/Option"
        selected_reason:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/Option/properties/id"
        additional_description:
          $ref: "#/components/schemas/Descriptor"
    CancellationTerm:
      description: Describes the cancellation terms of an item or an order. This can be referenced at an item or order level. Item-level cancellation terms can override the terms at the order level.
      type: object
      properties:
        fulfillment_state:
          description: The state of fulfillment during which these terms are applicable.
          allOf:
            - $ref: "#/components/schemas/FulfillmentState"
        cancellation_fee:
          $ref: "#/components/schemas/Fee"
        external_ref:
          $ref: "#/components/schemas/MediaFile"
    Catalog:
      description: Describes a Seller App catalog
      type: object
      properties:
        bpp/descriptor:
          $ref: "#/components/schemas/Descriptor"
        bpp/providers:
          type: array
          items:
            $ref: "#/components/schemas/Provider"
        bpp/fulfillments:
          type: array
          items:
            $ref: "#/components/schemas/Fulfillment"
    Category:
      description: Describes a category
      type: object
      properties:
        id:
          type: string
          description: Unique id of the category
        parent_category_id:
          type: string
          description: Unique id of the parent category
        descriptor:
          $ref: "#/components/schemas/Descriptor"
        time:
          $ref: "#/components/schemas/Time"
        image:
          description: "Image of an object. <br/><br/> A url based image will look like <br/><br/>```uri:http://path/to/image``` <br/><br/> An image can also be sent as a data string. For example : <br/><br/> ```data:js87y34ilhriuho84r3i4```"
          type: string
        tags:
          $ref: "#/components/schemas/TagGroup"
    IntentCategory:
      description: Describes a category
      type: object
      properties:
        id:
          type: string
          description: Unique id of the category
    Circle:
      description: Describes a circular area on the map
      type: object
      properties:
        gps:
          $ref: "#/components/schemas/Gps"
        radius:
          $ref: "#/components/schemas/Scalar"
      required:
        - gps
        - radius
    City:
      description: Describes a city
      type: object
      properties:
        name:
          type: string
          description: Name of the city
        code:
          type: string
          description: Codification of city code will be using the std code of the city e.g. for Bengaluru, city code is 'std:080'
    Contact:
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
    Context:
      description: Describes a ONDC message context
      type: object
      properties:
        domain:
          $ref: "#/components/schemas/Domain"
        country:
          $ref: "#/components/schemas/Country/properties/code"
        city:
          $ref: "#/components/schemas/City/properties/code"
        action:
          type: string
          description: Defines the ONDC API call. Any actions other than the enumerated actions are not supported by ONDC Protocol
          enum:
            - search
            - select
            - init
            - confirm
            - update
            - status
            - track
            - cancel
            - on_search
            - on_select
            - on_init
            - on_confirm
            - on_update
            - on_status
            - on_track
            - on_cancel
        core_version:
          type: string
          description: Version of ONDC core API specification being used
        bap_id:
          type: string
          description: Unique id of the Buyer App. By default it is the fully qualified domain name of the Buyer App
        bap_uri:
          type: string
          format: uri
          description: URI of the Buyer App for accepting callbacks. Must have the same domain name as the bap_id
        bpp_id:
          type: string
          description:
            Unique id of the Seller App. By default it is the fully qualified domain name of the Seller App,
            mandatory for all peer-to-peer API requests, i.e. except search and on_search
        bpp_uri:
          type: string
          format: uri
          description:
            URI of the Seller App. Must have the same domain name as the bap_id,
            mandatory for all peer-to-peer API requests, i.e. except search and on_search
        transaction_id:
          type: string
          description: This is a unique value which persists across all API calls from search through confirm
        message_id:
          type: string
          description: This is a unique value which persists during a request / callback cycle
        timestamp:
          type: string
          format: date-time
          description: Time of request generation in RFC3339 format
        key:
          type: string
          description: The encryption public key of the sender
        ttl:
          type: string
          description:
            Timestamp for which this message holds valid in ISO8601 durations format -
            Outer limit for ttl for search, select, init, confirm, status, track, cancel, update, rating, support is 'PT30S' which is 30 seconds,
            different buyer apps can change this to meet their UX requirements, but it shouldn't exceed this outer limit
      required:
        - domain
        - action
        - core_version
        - bap_id
        - bap_uri
        - transaction_id
        - message_id
        - city
        - country
        - timestamp
    Country:
      description: Describes a country.
      type: object
      properties:
        name:
          type: string
          description: Name of the country
        code:
          type: string
          description: Country code as per ISO 3166 Alpha-3 code format
    CountryState:
      description: Describes a state.
      type: object
      properties:
        name:
          type: string
          description: Name of the state
        code:
          type: string
          description: State code as per ISO 3166 Alpha-2 code format
    Credential:
      description: Describes a credential of an entity - Person or Organization
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: "#/components/schemas/Descriptor"
        url:
          description: URL of the credential
          type: string
          format: uri
        tags:
          $ref: "#/components/schemas/TagGroup"
    DecimalValue:
      description: Describes a decimal value
      type: string
      pattern: "[+-]?([0-9]*[.])?[0-9]+"
    Descriptor:
      description: Describes the description of a real-world object.
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        symbol:
          type: string
        short_desc:
          type: string
        long_desc:
          type: string
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
    FulfillmentDescriptor:
      description: Describes the description of a real-world object.
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        short_desc:
          type: string
    Dimensions:
      description: Describes the dimensions of a real-world object
      type: object
      properties:
        length:
          $ref: "#/components/schemas/Scalar"
        breadth:
          $ref: "#/components/schemas/Scalar"
        height:
          $ref: "#/components/schemas/Scalar"
    Document:
      description: Describes a document which can be sent as a url
      type: object
      properties:
        url:
          type: string
          format: uri
        label:
          type: string
    Domain:
      description: Codification of domain for ONDC
      type: string
      enum:
        - ONDC:RET10
        - ONDC:RET11
        - ONDC:RET12
        - ONDC:RET13
        - ONDC:RET14
        - ONDC:RET15
        - ONDC:RET16
        - ONDC:RET18
        - ONDC:RET19
    Duration:
      description: Describes duration as per ISO8601 format
      type: string
    Error:
      description: Describes an error object
      type: object
      properties:
        type:
          type: string
          enum:
            - CONTEXT-ERROR
            - CORE-ERROR
            - DOMAIN-ERROR
            - POLICY-ERROR
            - JSON-SCHEMA-ERROR
        code:
          type: string
          description: ONDC specific error code. For full list of error codes, refer to docs/drafts/Error Codes.md of this repo
        path:
          type: string
          description: Path to json schema generating the error. Used only during json schema validation errors
        message:
          type: string
          description: Human readable message describing the error
      required:
        - type
        - code
    Fee:
      description: A fee applied on a particular entity
      type: object
      properties:
        percentage:
          description: Percentage of a value
          allOf:
            - $ref: "#/components/schemas/DecimalValue"
        amount:
          description: A fixed value
          allOf:
            - $ref: "#/components/schemas/Price"
    Feedback:
      description: Feedback for a service
      type: object
      properties:
        feedback_form:
          $ref: "#/components/schemas/FeedbackForm"
        feedback_url:
          $ref: "#/components/schemas/FeedbackUrl"
    FeedbackForm:
      description: Describes a feedback form that a Seller App can send to get feedback from the Buyer App
      type: array
      items:
        $ref: "#/components/schemas/FeedbackFormElement"
    FeedbackFormElement:
      description: An element in the feedback form. It can be question or an answer to the question.
      type: object
      properties:
        id:
          type: string
        parent_id:
          $ref: "#/components/schemas/FeedbackFormElement/properties/id"
        question:
          description: Specifies the question to which the answer options will be contained in the child FeedbackFormElements
          type: string
        answer:
          description: Specifies an answer option to which the question will be in the FeedbackFormElement specified in parent_id
          type: string
        answer_type:
          description: Specifies how the answer option should be rendered.
          type: string
          enum:
            - radio
            - checkbox
            - text
    FeedbackUrl:
      description: Describes how a feedback URL will be sent by the Seller App
      type: object
      properties:
        url:
          description: feedback URL sent by the Seller App
          type: string
          format: uri
        tl_method:
          type: string
          enum:
            - http/get
            - http/post
        params:
          type: object
          properties:
            feedback_id:
              type: string
              description: This value will be placed in the the $feedback_id url param in case of http/get and in the requestBody http/post requests
          additionalProperties:
            type: string
          required:
            - feedback_id
    Form:
      description: Describes a form
      type: object
      properties:
        url:
          description: "The URL from where the form can be fetched. The content fetched from the url must be processed as per the mime_type specified in this object. Once fetched, the rendering platform can choosed to render the form as-is as an embeddable element; or process it further to blend with the theme of the application. In case the interface is non-visual, the the render can process the form data and reproduce it as per the standard specified in the form."
          type: string
          format: uri
        data:
          description: The form content string. This content will again follow the mime_type field for processing. Typically forms should be sent as an html string starting with <form></form> tags. The application must render this form after removing any css or javascript code if necessary. The `action` attribute in the form should have a url where the form needs to be submitted.
          type: string
        mime_type:
          description: This field indicates the nature and format of the form received by querying the url. MIME types are defined and standardized in IETF's RFC 6838.
          type: string
    Fulfillment:
      description: Describes how a single product/service will be rendered/fulfilled to the end customer
      type: object
      properties:
        id:
          type: string
          description: Unique reference ID to the fulfillment of an order
        type:
          type: string
          description: This describes the type of fulfillment ("Pickup" - Buyer picks up from store by themselves or through their logistics provider; "Delivery" - seller delivers to buyer)
          enum:
            - Delivery
            - Pickup
            - Delivery and Pickup
      required:
        - id
        - type
    IntentFulfillment:
      description: Describes how a single product/service will be rendered/fulfilled to the end customer
      type: object
      properties:
        type:
          type: string
          description: This describes the type of fulfillment ("Pickup" - Buyer picks up from store by themselves or through their logistics provider; "Delivery" - seller delivers to buyer)
          enum:
            - Delivery
            - Pickup
            - Delivery and Pickup
        end:
          description: Details on the end of fulfillment
          type: object
          properties:
            location:
              description: Describes an address
              type: object
              properties:
                area_code:
                  type: string
                  description: "Area code. This can be Pincode, ZIP code or any equivalent"
    OrderFulfillment:
      description: Describes how a single product/service will be rendered/fulfilled to the end customer
      type: object
      properties:
        id:
          type: string
          description: Unique reference ID to the fulfillment of an order
        type:
          type: string
          description: This describes the type of fulfillment ("Pickup" - Buyer picks up from store by themselves or through their logistics provider; "Delivery" - seller delivers to buyer)
          enum:
            - Delivery
            - Pickup
            - Delivery and Pickup
            - Reverse QC
        "@ondc/org/TAT":
          description: fulfillment turnaround time in ISO8601 durations format e.g. 'PT24H' indicates 24 hour TAT
          type: string
        "@ondc/org/provider_name":
          type: string
        provider_id:
          type: string
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        agent:
          $ref: '#/components/schemas/Agent'
        rating:
          $ref: "#/components/schemas/Rating/properties/value"
        state:
          $ref: "#/components/schemas/FulfillmentState"
        tracking:
          type: boolean
          description: Indicates whether the fulfillment allows tracking
          default: false
        start:
          description: Details on the start of fulfillment
          type: object
          properties:
            location:
              $ref: "#/components/schemas/FulfillmentLocation"
            time:
              $ref: "#/components/schemas/Time"
            instructions:
              $ref: "#/components/schemas/Descriptor"
            contact:
              $ref: "#/components/schemas/Contact"
            person:
              $ref: "#/components/schemas/Person"
            authorization:
              $ref: "#/components/schemas/Authorization"
        end:
          description: Details on the end of fulfillment
          type: object
          properties:
            location:
              $ref: "#/components/schemas/FulfillmentLocation"
            time:
              $ref: "#/components/schemas/Time"
            instructions:
              $ref: "#/components/schemas/Descriptor"
            contact:
              $ref: "#/components/schemas/Contact"
            person:
              $ref: "#/components/schemas/Person"
            authorization:
              $ref: "#/components/schemas/Authorization"
        tags:
          $ref: "#/components/schemas/TagGroup"
      required:
        - id
        - type
    Gps:
      description: Describes a gps coordinate
      type: string
      pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
    Image:
      description: "Image of an object. <br/><br/> A url based image will look like <br/><br/>```uri:http://path/to/image``` <br/><br/> An image can also be sent as a data string. For example : <br/><br/> ```data:js87y34ilhriuho84r3i4```"
      type: string
    Intent:
      description: Intent of a user. Used for searching for services. Buyer App can set finder fee type in payment."@ondc/org/buyer_app_finder_fee_type" and amount in "@ondc/org/buyer_app_finder_fee_amount"
      type: object
      properties: 
        fulfillment:
          $ref: "#/components/schemas/IntentFulfillment"
        payment:
          $ref: "#/components/schemas/IntentPayment"
        category:
          $ref: "#/components/schemas/IntentCategory"
        item:
          description: Describes a item
          type: object
          properties:
            descriptor:
              type: object
              properties:
                name:
                  type: string
    ItemQuantity:
      description: Describes count or amount of an item
      type: object
      properties:
        available:
          type: object
          properties:
            count:
              type: integer
              minimum: 0
        maximum:
          type: object
          properties:
            count:
              type: integer
              minimum: 1
        unitized:
          description: This represents the quantity available in a single unit of the item
          type: object
          properties:
            count:
              type: integer
              minimum: 1
              maximum: 1
            measure:
              properties:
                unit:
                  type: string
                value:
                  type: string
    Item:
      description: Describes a product or a service offered to the end consumer by the provider
      type: object
      properties:
        id:
          description: This is the most unique identifier of a service item. An example of an Item ID could be the SKU of a product.
          type: string
        parent_item_id:
          description: This is the most unique identifier of a service item. An example of an Item ID could be the SKU of a product.
          type: string
        descriptor:
          $ref: "#/components/schemas/Descriptor"
        price:
          description: Describes the price of an item. Allows for domain extension.
          type: object
          properties:
            currency:
              type: string
              description: ISO 4217 alphabetic currency code e.g. 'INR'
            value:
              $ref: "#/components/schemas/DecimalValue"
            maximum_value:
              $ref: "#/components/schemas/DecimalValue"
            tags:
              $ref: "#/components/schemas/TagGroup"
        quantity:
          $ref: "#/components/schemas/ItemQuantity"
        category_id:
          $ref: "#/components/schemas/Category/properties/id"
        category_ids:
          description: Categories this item can be listed under
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Category/properties/id"
        fulfillment_id:
          $ref: "#/components/schemas/Fulfillment/properties/id"
        fulfillment_ids:
          type: array
          properties:
            id:
              type: string
              description: Unique reference ID to the fulfillment of an order
        replacement_terms:
          type: array
          items:
            type: object
            properties:
              replace_within:
                type: object
                properties:
                  duration: 
                    type: string
                    description: The duration within which the item can be replaced
        rating:
          $ref: "#/components/schemas/Rating/properties/value"
        location_id:
          $ref: "#/components/schemas/Location/properties/id"
        time:
          $ref: "#/components/schemas/Time"
        related:
          type: boolean
        recommended:
          type: boolean
        "@ondc/org/returnable":
          description: whether the item is returnable
          type: boolean
        "@ondc/org/seller_pickup_return":
          description: in case of return, whether the item should be picked up by seller
          type: boolean
        "@ondc/org/return_window":
          description: return window for the item in ISO8601 durations format e.g. 'PT24H' indicates 24 hour return window. Mandatory if "@ondc/org/returnable" is "true"
          type: string
        "@ondc/org/cancellable":
          description: whether the item is cancellable
          type: boolean
        "@ondc/org/time_to_ship":
          description: time from order confirmation by which item ready to ship in ISO8601 durations format (e.g. 'PT30M' indicates item ready to ship in 30 mins). Mandatory for category_id "F&B"
          type: string
        "@ondc/org/available_on_cod":
          description: whether the catalog item is available on COD
          type: boolean
        "@ondc/org/contact_details_consumer_care":
          description: contact details for consumer care
          type: string
        "@ondc/org/statutory_reqs_packaged_commodities":
          type: object
          description: mandatory for category_id "Packaged Commodities"
          properties:
            common_or_generic_name_of_commodity:
              description: common or generic name of commodity
              type: string
            month_year_of_manufacture_packing_import:
              description: month and year of manufacture or packing or import
              type: string
            manufacturer_or_packer_name:
              description: name of manufacturer or packer (in case manufacturer is not the packer) or name of importer for imported goods
              type: string
            manufacturer_or_packer_address:
              description: address of manufacturer or packer (in case manufacturer is not the packer) or address of importer for imported goods
              type: string
            mfg_license_no:
              description: manufacturing license no
              type: string
            multiple_products_name_number_or_qty:
              description: for packages with multiple products, the name and number of quantity of each (can be shown as "name1-number_or_quantity; name2-number_or_quantity..")
              type: string
            net_quantity_or_measure_of_commodity_in_pkg:
              description: net quantity of commodity in terms of standard unit of weight or measure of commodity contained in package
              type: string
            expiry_date:
              description: month and year of expiry
              type: string
        "@ondc/org/statutory_reqs_prepackaged_food":
          type: object
          description: mandatory for category_id "Packaged food"
          properties:
            nutritional_info:
              description:
                nutritional info (can be shown as nutritional info (with unit, per standard unit, per serving);..)
                e.g. "Energy(KCal) - (per 100kg) 420, (per serving 50g) 250; Protein(g) - (per 100kg) 12, (per serving 50g)6;.."
              type: string
            additives_info:
              description: food additives together with specific name or recognized International Numbering System (can be shown as additive1-name or number;additive2-name or number;..)
              type: string
            brand_owner_FSSAI_license_no:
              description: FSSAI license no of brand owner
              type: string
            other_FSSAI_license_no:
              description: FSSAI license no of manufacturer or marketer or packer or bottler if different from brand owner
              type: string
            importer_FSSAI_license_no:
              description: FSSAI license no of importer
              type: string
        tags:
          $ref: "#/components/schemas/TagGroup"
    OrderItem:
      description: Describes a product or a service offered to the end consumer by the provider
      type: object
      properties:
        id:
          description: This is the most unique identifier of a service item. An example of an Item ID could be the SKU of a product.
          type: string
        fulfillment_id:
          type: string
          description: Unique reference ID to the fulfillment of an order
        fulfillment_ids:
          type: array
          items:
            type: string
            description: Unique reference ID to the fulfillment of an order
        quantity:
          type: object
          properties:
            count:
              type: integer
              minimum: 0
        tags:
          $ref: "#/components/schemas/TagGroup"
    Language:
      description: indicates language code. ONDC supports language codes as per ISO 639.2 standard
      type: object
      properties:
        code:
          type: string
    Location:
      description: Describes the location of a runtime object.
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: "#/components/schemas/Descriptor"
        gps:
          $ref: "#/components/schemas/Gps"
        address:
          $ref: "#/components/schemas/Address"
        city:
          $ref: "#/components/schemas/City"
        state:
          $ref: "#/components/schemas/CountryState"
        time:
          $ref: "#/components/schemas/Time"
    IntentLocation:
      description: Describes the location of a runtime object.
      type: object
      properties:
        gps:
          $ref: "#/components/schemas/Gps"
        address:
          $ref: "#/components/schemas/Address"
    FulfillmentLocation:
      description: Describes the location of a runtime object.
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: "#/components/schemas/FulfillmentDescriptor"
        gps:
          $ref: "#/components/schemas/Gps"
        address:
          $ref: "#/components/schemas/Address"
    TrackLocation:
      description: Describes the location of a runtime object.
      type: object
      properties:
        id:
          type: string
        gps:
          $ref: "#/components/schemas/Gps"
        time:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
        updated_at:
          type: string
          format: date-time
          
    Name:
      type: string
      description: "Describes the name of a person in format: ./{given_name}/{honorific_prefix}/{first_name}/{middle_name}/{last_name}/{honorific_suffix}"
      pattern: '^\./[^/]+/[^/]*/[^/]*/[^/]*/[^/]*/[^/]*$'
    MediaFile:
      description: This object contains a url to a media file.
      type: object
      properties:
        mimetype:
          description: "indicates the nature and format of the document, file, or assortment of bytes. MIME types are defined and standardized in IETF's RFC 6838"
          type: string
        url:
          description: The URL of the file
          type: string
          format: uri
        signature:
          description: The digital signature of the file signed by the sender
          type: string
        dsa:
          description: The signing algorithm used by the sender
          type: string
    Offer:
      description: Describes an offer
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: "#/components/schemas/Descriptor"
        location_ids:
          type: array
          items:
            $ref: "#/components/schemas/Location/properties/id"
        category_ids:
          description: Categories this item can be listed under
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Category/properties/id"
        item_ids:
          type: array
          items:
            $ref: "#/components/schemas/Item/properties/id"
        time:
          $ref: "#/components/schemas/Time"
        tags:
          $ref: "#/components/schemas/TagGroup"
    Operator:
      description: Describes the agent of a service
      allOf:
        - $ref: "#/components/schemas/Person"
        - properties:
            experience:
              type: object
              properties:
                label:
                  type: string
                value:
                  type: string
                unit:
                  type: string
    Option:
      description: Describes a selectable option
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: "#/components/schemas/Descriptor"
    Order:
      description: Describes the details of an order
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for Order across the network
        state:
          type: string
        provider:
          type: object
          properties:
            id:
              $ref: "#/components/schemas/Provider/properties/id"
            locations:
              type: array
              maxItems: 1
              items:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/Location/properties/id"
            creds:
              type: array
              items:
                type: object
                properties:
                  descriptor:
                    type: object
                    properties:
                      code:
                        type: string
                      short_desc:
                        type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
        offers:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: "#/components/schemas/Offer/properties/id"
              tags:
                $ref: "#/components/schemas/TagGroup"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        billing:
          $ref: "#/components/schemas/Billing"
        fulfillments:
          type: array
          items:
            $ref: "#/components/schemas/OrderFulfillment"
        cancellation_terms:
          description: The cancellation terms of this order. This can be overriden at the item level cancellation terms.
          type: array
          items:
            $ref: "#/components/schemas/CancellationTerm"
        quote:
          $ref: "#/components/schemas/Quotation"
        payment:
          $ref: "#/components/schemas/Payment"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Organization:
      description: Describes an organization
      type: object
      properties:
        name:
          type: string
        cred:
          type: string
    Page:
      description: Describes a page in a search result
      type: object
      properties:
        id:
          type: string
        next_id:
          type: string
    Payment:
      description: Describes a payment
      type: object
      properties:
        uri:
          type: string
          description: "A payment uri to be called by the Buyer App. If empty, then the payment is to be done offline. The details of payment should be present in the params object. If ```tl_method``` = http/get, then the payment details will be sent as url params. Two url param values, ```$transaction_id``` and ```$amount``` are mandatory. And example url would be : https://www.example.com/pay?txid=$transaction_id&amount=$amount&vpa=upiid&payee=shopez&billno=1234"
          format: uri
        tl_method:
          type: string
          enum:
            - http/get
            - http/post
            - payto
            - upi
        params:
          type: object
          properties:
            transaction_id:
              type: string
              description: This value will be placed in the the $transaction_id url param in case of http/get and in the requestBody http/post requests
            transaction_status:
              type: string
            amount:
              $ref: "#/components/schemas/Price/properties/value"
            currency:
              $ref: "#/components/schemas/Price/properties/currency"
          additionalProperties:
            type: string
          required:
            - currency
        type:
          type: string
          enum:
            - ON-ORDER
            - ON-FULFILLMENT
            - POST-FULFILLMENT
        status:
          type: string
          enum:
            - PAID
            - NOT-PAID
        time:
          $ref: "#/components/schemas/Time"
        collected_by:
          type: string
          enum:
            - BAP
            - BPP
        "@ondc/org/buyer_app_finder_fee_type":
          type: string
          enum:
            - Amount
            - Percent
        "@ondc/org/buyer_app_finder_fee_amount":
          $ref: "#/components/schemas/DecimalValue"
        "@ondc/org/withholding_amount":
          $ref: "#/components/schemas/DecimalValue"
        "@ondc/org/return_window":
          description: return window for withholding amount in ISO8601 durations format e.g. 'PT24H' indicates 24 hour return window
          type: string
        "@ondc/org/settlement_basis":
          description: In case of prepaid payment, whether settlement between counterparties should be on the basis of collection, shipment or delivery
          type: string
          enum:
            - shipment
            - delivery
            - return_window_expiry
        "@ondc/org/settlement_window":
          description: settlement window for the counterparty in ISO8601 durations format e.g. 'PT48H' indicates 48 hour return window
          type: string
        tags:
          $ref: "#/components/schemas/TagGroup"
        "@ondc/org/settlement_details":
          type: array
          items:
            type: object
            properties:
              settlement_counterparty:
                type: string
                enum:
                  - buyer
                  - buyer-app
                  - seller-app
                  - logistics-provider
              settlement_phase:
                type: string
                enum:
                  - sale-amount
                  - withholding-amount
                  - refund
              settlement_amount:
                type: integer
              settlement_type:
                type: string
                enum:
                  - neft
                  - rtgs
                  - upi
              settlement_bank_account_no:
                type: string
              settlement_ifsc_code:
                type: string
              upi_address:
                description: UPI payment address e.g. VPA
                type: string
              bank_name:
                description: Bank name
                type: string
              branch_name:
                description: Branch name
                type: string
              beneficiary_name:
                description: Beneficiary Name
                type: string
              settlement_status:
                type: string
                enum:
                  - PAID
                  - NOT-PAID
              settlement_timestamp:
                description: Settlement transaction timestamp
                type: string
                format: date-time
    IntentPayment:
        "@ondc/org/buyer_app_finder_fee_type":
          type: string
          enum:
            - Amount
            - Percent
        "@ondc/org/buyer_app_finder_fee_amount":
          $ref: "#/components/schemas/DecimalValue"
    Person:
      description: Describes a person.
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
    Policy:
      description: Describes a policy. Allows for domain extension.
      type: object
      properties:
        id:
          type: string
        descriptor:
          $ref: "#/components/schemas/Descriptor"
        parent_policy_id:
          $ref: "#/components/schemas/Policy/properties/id"
        time:
          $ref: "#/components/schemas/Time"
    Price:
      description: Describes the price of an item. Allows for domain extension.
      type: object
      properties:
        currency:
          type: string
          description: ISO 4217 alphabetic currency code e.g. 'INR'
        value:
          $ref: "#/components/schemas/DecimalValue"
        tags:
          $ref: "#/components/schemas/TagGroup"
    Provider:
      description: Describes a service provider. This can be a restaurant, a hospital, a Store etc
      type: object
      properties:
        id:
          type: string
          description: Id of the provider
        descriptor:
          $ref: "#/components/schemas/Descriptor"
        category_id:
          type: string
          description: Category Id of the provider
        "@ondc/org/fssai_license_no":
          type: string
          description: FSSAI license no. Mandatory for category_id "F&B"
        rating:
          $ref: "#/components/schemas/Rating/properties/value"
        time:
          $ref: "#/components/schemas/Time"
        categories:
          type: array
          items:
            $ref: "#/components/schemas/Category"
        creds:
          type: array
          items:
            $ref: "#/components/schemas/Credential"
        fulfillments:
          type: array
          items:
            $ref: "#/components/schemas/Fulfillment"
        locations:
          type: array
          items:
            $ref: "#/components/schemas/Location"
        offers:
          type: array
          items:
            $ref: "#/components/schemas/Offer"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
        ttl:
          type: string
          description: Validity of catalog in ISO8601 durations format after which it has to be refreshed e.g. 'P7D' indicates validity of 7 days; value of 0 indicates catalog is not cacheable
        tags:
          $ref: "#/components/schemas/TagGroup"
    Quotation:
      description: Describes a quote
      type: object
      properties:
        price:
          $ref: "#/components/schemas/Price"
        breakup:
          type: array
          items:
            type: object
            properties:
              "@ondc/org/item_id":
                $ref: "#/components/schemas/Item/properties/id"
              "@ondc/org/item_quantity":
                $ref: "#/components/schemas/ItemQuantity/properties/available"
              "@ondc/org/title_type":
                type: string
                enum:
                  - item
                  - delivery
                  - packing
                  - tax
                  - misc
                  - discount
              item:
                properties:
                  quantity:
                    properties:
                      available:
                        $ref: "#/components/schemas/ItemQuantity/properties/available"
                      maximum:
                        $ref: "#/components/schemas/ItemQuantity/properties/maximum"
                  tags:
                    $ref: "#/components/schemas/TagGroup"
              title:
                type: string
              price:
                $ref: "#/components/schemas/Price"
        ttl:
          $ref: "#/components/schemas/Duration"
    Rateable:
      description: If the entity can be rated or not
      type: boolean
    Rating:
      description: Describes the rating of a person or an object.
      type: object
      properties:
        value:
          description: Rating value given to the object (1 - Poor; 2 - Needs improvement; 3 - Satisfactory; 4 - Good; 5 - Excellent)
          type: number
          minimum: 1
          maximum: 5
    Scalar:
      description: An object representing a scalar quantity.
      type: object
      properties:
        type:
          type: string
          enum:
            - CONSTANT
            - VARIABLE
        value:
          type: number
        estimated_value:
          type: number
        computed_value:
          type: number
        range:
          type: object
          properties:
            min:
              type: number
            max:
              type: number
        unit:
          type: string
      required:
        - value
        - unit
    Schedule:
      description: Describes a schedule
      type: object
      properties:
        frequency:
          $ref: "#/components/schemas/Duration"
        holidays:
          type: array
          items:
            type: string
            format: date-time
        times:
          type: array
          items:
            type: string
            format: date-time
    State:
      description: Describes a state
      type: object
      properties:
        descriptor:
          $ref: "#/components/schemas/Descriptor"
        updated_at:
          type: string
          format: date-time
        updated_by:
          type: string
          description: ID of entity which changed the state
    FulfillmentState:
      description: Describes a state
      type: object
      properties:
        descriptor:
          $ref: "#/components/schemas/FulfillmentDescriptor"
        updated_at:
          type: string
          format: date-time
    Subscriber:
      type: object
      description: "Any entity which wants to authenticate itself on a network. This can be a Buyer App, Seller App or Gateway."
      properties:
        subscriber_id:
          type: string
          description: Registered domain name of the subscriber. Must have a valid SSL certificate issued by a Certificate Authority of the operating region
        type:
          type: string
          enum:
            - bap
            - bpp
            - bg
        cb_url:
          type: string
          description: Callback URL of the subscriber. The Registry will call this URL's on_subscribe API to validate the subscriber\'s credentials
        domain:
          $ref: "#/components/schemas/Domain"
        city:
          $ref: "#/components/schemas/City/properties/code"
        country:
          $ref: "#/components/schemas/Country/properties/code"
        signing_public_key:
          type: string
          description: 'Signing Public key of the subscriber. <br/><br/>Any subscriber platform (Buyer App, Seller App, Gateway) who wants to transact on the network must digitally sign the ```requestBody``` using the corresponding private key of this public key and send it in the transport layer header. In case of ```HTTP``` it is the ```Authorization``` header. <br><br/>The ```Authorization``` will be used to validate the signature of a Buyer App or Seller App.<br/><br/>Furthermore, if an API call is being proxied or multicast by a ONDC Gateway, the Gateway must use it\''s signing key to digitally sign the ```requestBody``` using the corresponding private key of this public key and send it in the ```X-Gateway-Authorization``` header.'
        encryption_public_key:
          type: string
          description: Encryption public key of the Buyer App. Any Seller App must encrypt the ```requestBody.message``` value of the ```on_search``` API using this public key.
        status:
          type: string
          enum:
            - INITIATED
            - UNDER_SUBSCRIPTION
            - SUBSCRIBED
            - INVALID_SSL
            - UNSUBSCRIBED
        created:
          type: string
          description: Timestamp when a subscriber was added to the registry with status = INITIATED
          format: date-time
        updated:
          type: string
          format: date-time
        expires:
          type: string
          description: Expiry timestamp in UTC derived from the ```lease_time``` of the subscriber
          format: date-time
    Support:
      description: Customer support
      type: object
      properties:
        type:
          type: string
          enum:
            - order
            - billing
            - fulfillment
        ref_id:
          type: string
        channels:
          $ref: "#/components/schemas/TagGroup"
    Tag:
      description: "Describes a tag. This is a simple key-value store which is used to contain extended metadata. This object can be added as a property to any schema to describe extended attributes. For BAPs, tags can be sent during search to optimize and filter search results. BPPs can use tags to index their catalog to allow better search functionality. Tags are sent by the BPP as part of the catalog response in the `on_search` callback. Tags are also meant for display purposes. Upon receiving a tag, BAPs are meant to render them as name-value pairs. This is particularly useful when rendering tabular information about a product or service."
      type: object
      properties:
        code:
          description: "The machine-readable name of the tag. The allowed values of this property can be published at three levels namely, a) Core specification, b) industry sector-specific adaptations, and c) Network-specific adaptations. Except core, each adaptation (sector or network) should prefix a unique namespace with the allowed value."
          type: string
        name:
          description: "The human-readable name of the tag. This set by the BPP and rendered as-is by the BAP. Sometimes, the network policy may reserve some names for this property. Values outside the reserved values can be set by the BPP. However,the BAP may choose to rename or even ignore this value and render the output purely using the `code` property, but it is recommended for BAPs to keep the name same to avoid confusion and provide consistency."
          type: string
        value:
          description: The value of the tag. This set by the BPP and rendered as-is by the BAP.
          type: string
    TagGroup:
      description: "A collection of tag objects with group level attributes. For detailed documentation on the Tags and Tag Groups schema go to https://github.com/beckn/protocol-specifications/discussions/316"
      type: object
      properties:
        code:
          description: "The machine-readable name of the tag group. The allowed values of this property can be published at three levels namely, a) Core specification, b) industry sector-specific adaptations, and c) Network-specific adaptations. Except core, each adaptation (sector or network) should prefix a unique namespace with the allowed value. Values outside the allowed values may or may not be ignored by the rendering platform. As this schema is purely for catalog display purposes, it is not recommended to send this value during search."
          type: string
        name:
          description: "A human-readable string describing the heading under which the tags are to be displayed. Sometimes, the network policy may reserve some names for this property. Values outside the reserved values can be set by the BPP. However,the BAP may choose to rename or even ignore this value and render the output purely using code property, but it is recommended for BAPs to keep the name same to avoid confusion and provide consistency. As this schema is purely for catalog display purposes, it is not recommended to send this value during `search`."
          type: string
        list:
          description: "An array of Tag objects listed under this group. This property can be set by BAPs during search to narrow the `search` and achieve more relevant results. When received during `on_search`, BAPs must render this list under the heading described by the `name` property of this schema."
          type: array
          items:
            $ref: "#/components/schemas/Tag"
    Time:
      description: Describes time in its various forms. It can be a single point in time; duration; or a structured timetable of operations
      type: object
      properties:
        label:
          type: string
        timestamp:
          type: string
          format: date-time
        range:
          type: object
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
        days:
          type: string
          description: comma separated values representing days of the week
        schedule:
          $ref: "#/components/schemas/Schedule"
    Tracking:
      description: Contains tracking information that can be used by the BAP to track the fulfillment of an order in real-time. which is useful for knowing the location of time sensitive deliveries.
      type: object
      properties:
        id:
          description: A unique tracking reference number
          type: string
        url:
          description: "A URL to the tracking endpoint. This can be a link to a tracking webpage, a webhook URL created by the BAP where BPP can push the tracking data, or a GET url creaed by the BPP which the BAP can poll to get the tracking data. It can also be a websocket URL where the BPP can push real-time tracking data."
          type: string
          format: uri
        location:
          description: "In case there is no real-time tracking endpoint available, this field will contain the latest location of the entity being tracked. The BPP will update this value everytime the BAP calls the track API."
          allOf:
            - $ref: "#/components/schemas/TrackLocation"
        status:
          description: "This value indicates if the tracking is currently active or not. If this value is `active`, then the BAP can begin tracking the order. If this value is `inactive`, the tracking URL is considered to be expired and the BAP should stop tracking the order."
          type: string
          enum:
            - active
            - inactive
        tags:
          $ref: "#/components/schemas/TagGroup"
    Vehicle:
      description: Describes the properties of a vehicle used in a mobility service
      type: object
      properties:
        registration:
          type: string
